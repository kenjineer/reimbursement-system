{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-01-27T09:15:06.645Z",
    "end": "2021-01-27T09:15:07.325Z",
    "duration": 680,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d23ec31f-022b-4e25-aa0b-058081319b80",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34d167fc-ed46-4332-941c-824c9bd2a234",
          "title": "Login API",
          "fullFile": "C:\\Users\\Ken\\Projects\\reimbursement-system\\reimbursement-system\\server\\login\\test\\loginTest.js",
          "file": "\\test\\loginTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "cc54ff3e-56a8-461e-917a-969b16301ace",
              "title": "POST /api/v1/login",
              "fullFile": "C:\\Users\\Ken\\Projects\\reimbursement-system\\reimbursement-system\\server\\login\\test\\loginTest.js",
              "file": "\\test\\loginTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should POST login credentials using id",
                  "fullTitle": "Login API POST /api/v1/login It should POST login credentials using id",
                  "timedOut": false,
                  "duration": 172,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: '090219-1173',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst loginMsg = 'Logged in successfully.';\n\t\tres.should.have.status(201);\n\t\tres.body.success.should.be.eql(1);\n\t\tres.body.message.should.be.eql(loginMsg);\n\t\tres.body.jwt.should.have.property('token');\n\t\tres.body.jwt.expiryNum.should.be.eql(8);\n\t\tres.body.jwt.datetimeType.should.be.eql('h');\n\t\tres.body.jwt.auth.should.be.a('number');\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "01e24318-ddd0-4c32-b66d-f79cfcb1c46c",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should POST login credentials using email",
                  "fullTitle": "Login API POST /api/v1/login It should POST login credentials using email",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'kenneth.karamihan@awsys-i.com',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst loginMsg = 'Logged in successfully.';\n\t\tres.should.have.status(201);\n\t\tres.body.success.should.be.eql(1);\n\t\tres.body.message.should.be.eql(loginMsg);\n\t\tres.body.jwt.should.have.property('token');\n\t\tres.body.jwt.expiryNum.should.be.eql(8);\n\t\tres.body.jwt.datetimeType.should.be.eql('h');\n\t\tres.body.jwt.auth.should.be.a('number');\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "00b1400e-cd3f-4538-a063-b93125834a01",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should POST login credentials using username",
                  "fullTitle": "Login API POST /api/v1/login It should POST login credentials using username",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'kenken',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst loginMsg = 'Logged in successfully.';\n\t\tres.should.have.status(201);\n\t\tres.body.success.should.be.eql(1);\n\t\tres.body.message.should.be.eql(loginMsg);\n\t\tres.body.jwt.should.have.property('token');\n\t\tres.body.jwt.expiryNum.should.be.eql(8);\n\t\tres.body.jwt.datetimeType.should.be.eql('h');\n\t\tres.body.jwt.auth.should.be.a('number');\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "d49bd083-2367-4e70-bb91-c3a48f87ae99",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using id with incorrect format",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using id with incorrect format",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: '123456-78901',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'No user with that id/username/email.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "6145c009-7feb-4d09-b273-4acdfef18674",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using non-existing id",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using non-existing id",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: '123199-9999',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'No user with that id/username/email.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "b668ec61-fe16-4de8-adf4-3fb08e321bbe",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using non-existing email",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using non-existing email",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'aoka@gmail.com',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'No user with that id/username/email.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "3cfed169-124e-4f89-a73b-2a5028545c67",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using non-existing username",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using non-existing username",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'tototot',\n\tpassword: 'kenken',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'No user with that id/username/email.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "6a39e532-5f2d-46bf-ac3f-834f73530b2d",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using id with incorrect password",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using id with incorrect password",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: '090219-1173',\n\tpassword: 'incorrect',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'Password incorrect.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "eedf95f1-ac25-4026-a38d-6df41a0046b8",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using email with incorrect password",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using email with incorrect password",
                  "timedOut": false,
                  "duration": 83,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'kenneth.karamihan@awsys-i.com',\n\tpassword: 'incorrect',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'Password incorrect.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "1c1395c8-1b43-40fb-a23c-34f84eafc601",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "It should NOT POST login credentials using username with incorrect password",
                  "fullTitle": "Login API POST /api/v1/login It should NOT POST login credentials using username with incorrect password",
                  "timedOut": false,
                  "duration": 86,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n\tusername: 'kenken',\n\tpassword: 'incorrect',\n};\nchai.request(loginServer)\n\t.post('/api/v1/login')\n\t.send(user)\n\t.end((err, res) => {\n\t\tconst checkObj = {\n\t\t\tsuccess: 0,\n\t\t\tmessage: 'Login failed.',\n\t\t\tjwt: {\n\t\t\t\terror_message: 'Password incorrect.',\n\t\t\t},\n\t\t};\n\t\tres.should.have.status(401);\n\t\tres.body.should.be.eql(checkObj);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "16f6d46f-5dc3-402a-8bf0-c6a2736c17d8",
                  "parentUUID": "cc54ff3e-56a8-461e-917a-969b16301ace",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01e24318-ddd0-4c32-b66d-f79cfcb1c46c",
                "00b1400e-cd3f-4538-a063-b93125834a01",
                "d49bd083-2367-4e70-bb91-c3a48f87ae99",
                "6145c009-7feb-4d09-b273-4acdfef18674",
                "b668ec61-fe16-4de8-adf4-3fb08e321bbe",
                "3cfed169-124e-4f89-a73b-2a5028545c67",
                "6a39e532-5f2d-46bf-ac3f-834f73530b2d",
                "eedf95f1-ac25-4026-a38d-6df41a0046b8",
                "1c1395c8-1b43-40fb-a23c-34f84eafc601",
                "16f6d46f-5dc3-402a-8bf0-c6a2736c17d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 621,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}