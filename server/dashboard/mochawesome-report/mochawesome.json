{
  "stats": {
    "suites": 3,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2021-02-01T11:31:51.921Z",
    "end": "2021-02-01T11:31:52.203Z",
    "duration": 282,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "897f8ef4-7c52-4816-9d18-a17852c531ae",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7911e969-f3c6-48a2-a34d-73d060f7c1b6",
          "title": "Dashboard API",
          "fullFile": "C:\\Users\\Ken\\Projects\\reimbursement-system\\reimbursement-system\\server\\dashboard\\test\\dashboardTest.js",
          "file": "\\test\\dashboardTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "59c9988b-0d86-41b1-b5cd-adc073db1ca5",
              "title": "Authorized User",
              "fullFile": "C:\\Users\\Ken\\Projects\\reimbursement-system\\reimbursement-system\\server\\dashboard\\test\\dashboardTest.js",
              "file": "\\test\\dashboardTest.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Authorized User\"",
                  "fullTitle": "Dashboard API Authorized User \"before all\" hook in \"Authorized User\"",
                  "timedOut": false,
                  "duration": 106,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const credentials = {\n\tusername: '0902191173',\n\tpassword: 'kenken',\n};\nchai.request(loginServerUrl)\n\t.post('/api/v1/login')\n\t.send(credentials)\n\t.end((err, res) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t} else {\n\t\t\tjwt = res.body.jwt.token;\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "096a9a3a-468b-4034-9762-e617cc12ce9e",
                  "parentUUID": "59c9988b-0d86-41b1-b5cd-adc073db1ca5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should GET user reimbursements when user is authorized.",
                  "fullTitle": "Dashboard API Authorized User It should GET user reimbursements when user is authorized.",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(dashboardServer)\n\t.get('/api/v1/dashboard')\n\t.set('Authorization', jwt)\n\t.end((err, res) => {\n\t\tres.should.have.status(200);\n\t\tres.body.should.have.property('user').to.be.an('object');\n\t\tres.body.should.have.property('ctgReimbursements').to.be.an('array');\n\t\tres.body.should.have.property('pndReimbursements').to.be.an('array');\n\t\tres.body.should.have.property('rctReimbursements').to.be.an('array');\n\t\tres.body.should.have.property('rjtReimbursementCnt').to.be.a('number');\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "24f8eed0-ff81-4970-b5c6-209835e42acc",
                  "parentUUID": "59c9988b-0d86-41b1-b5cd-adc073db1ca5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24f8eed0-ff81-4970-b5c6-209835e42acc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 67,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "dc15f2c9-dd60-4ec3-9cb0-fe380a6841e9",
              "title": "Unauthorized User",
              "fullFile": "C:\\Users\\Ken\\Projects\\reimbursement-system\\reimbursement-system\\server\\dashboard\\test\\dashboardTest.js",
              "file": "\\test\\dashboardTest.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Unauthorized User\"",
                  "fullTitle": "Dashboard API Unauthorized User \"before each\" hook in \"Unauthorized User\"",
                  "timedOut": false,
                  "duration": 82,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const credentials = {\n\tusername: '0902191173',\n\tpassword: 'incorrect',\n};\nchai.request(loginServerUrl)\n\t.post('/api/v1/login')\n\t.send(credentials)\n\t.end((err, res) => {\n\t\tif (err) {\n\t\t\tconsole.log(err);\n\t\t} else {\n\t\t\tjwt = res.body.jwt.token;\n\t\t}\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "c801aee2-ead4-44cc-9cb0-c41808278b12",
                  "parentUUID": "dc15f2c9-dd60-4ec3-9cb0-fe380a6841e9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should NOT GET user reimbursements when user is unauthorized.",
                  "fullTitle": "Dashboard API Unauthorized User It should NOT GET user reimbursements when user is unauthorized.",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(dashboardServer)\n\t.get('/api/v1/dashboard')\n\t.set('Authorization', jwt || '')\n\t.end((err, res) => {\n\t\tres.should.have.status(401);\n\t\tdone();\n\t});",
                  "err": {},
                  "uuid": "3a49f17c-6d32-4470-9979-01526e9a31ef",
                  "parentUUID": "dc15f2c9-dd60-4ec3-9cb0-fe380a6841e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a49f17c-6d32-4470-9979-01526e9a31ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}